steps:
  # Node.js Scraper Service のビルド
  - name: 'node:20'
    entrypoint: 'npm'
    args: ['ci']
    dir: 'scraper'
  
  # テスト実行（将来の拡張用）
  # - name: 'node:20'
  #   entrypoint: 'npm'
  #   args: ['test']
  #   dir: 'scraper'
  
  # Docker イメージのビルド
  - name: 'gcr.io/cloud-builders/docker'
    args: ['build', '-t', 'gcr.io/$PROJECT_ID/restaurant-board-scraper:$BUILD_ID', './scraper']
  
  # イメージをContainer Registryにプッシュ
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'gcr.io/$PROJECT_ID/restaurant-board-scraper:$BUILD_ID']
  
  # Cloud Run にデプロイ
  - name: 'gcr.io/cloud-builders/gcloud'
    args:
      - 'run'
      - 'deploy'
      - 'restaurant-board-scraper'
      - '--image'
      - 'gcr.io/$PROJECT_ID/restaurant-board-scraper:$BUILD_ID'
      - '--platform'
      - 'managed'
      - '--region'
      - 'asia-northeast1'
      - '--allow-unauthenticated'
      - '--port'
      - '3001'
      - '--memory'
      - '1Gi'
      - '--cpu'
      - '1'
      - '--timeout'
      - '300'
      - '--concurrency'
      - '10'
      - '--max-instances'
      - '10'

# ビルド設定
options:
  machineType: 'E2_HIGHCPU_8'
  diskSizeGb: 100
  logging: CLOUD_LOGGING_ONLY

# タイムアウト設定（分）
timeout: '1200s'

# 置換変数
substitutions:
  _SERVICE_NAME: 'restaurant-board-scraper'
  _REGION: 'asia-northeast1'

# イメージのタグ
images:
  - 'gcr.io/$PROJECT_ID/restaurant-board-scraper:$BUILD_ID'
